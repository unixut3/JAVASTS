<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	<!-- target object[core concern] -->
	<bean id="userDao" class="com.itwill.user.UserDaoImpl"/>
	<bean id="userService" class="com.itwill.user.UserServiceImpl">
		<property name="userDao" ref="userDao"/>
	</bean>
	
	<!-- Advice [crosscutting concern](log 찍는 메소드)
	 -->
	<bean id="loggingBeforeAdvicd" class="com.itwill4.aop.spring.LoggingBeforeAdvice"></bean>
	<bean id="profilingAroundAdvice" class="com.itwill4.aop.spring.ProfilingAroundAdvice"/>
	<bean id="emailSendAfterThrowingAdvice" class="com.itwill4.aop.spring.EmailSendAfterThrowingAdvice"/>
	
	 <!-- weaving[target + advice] -->

	<aop:config>
		<aop:pointcut expression="within(com.itwill.user.*)" id="emailSendAfterThrowingPointcut"/>
	<!-- aspect (advice -> joinpoint -> pointcut(target객체의 메소드) ) -->
		<aop:aspect ref="emailSendAfterThrowingAdvice">
			<aop:after-throwing 
					pointcut-ref="emailSendAfterThrowingPointcut"
					method="emailSend" 
					throwing="exObj"/>
		</aop:aspect>
	
		<aop:aspect ref="profilingAroundAdvice">
			<aop:around method="aroundProfiling" 
						pointcut="execution(* *..UserDao.*(..))"/>
						<!-- 모든 패키지를 할때 
						pointcut="execution(* *..*Dao.*(..))"/>
						 -->
		</aop:aspect>
	
		<aop:aspect ref="loggingBeforeAdvicd">
			<aop:before method="beforeLog" 
						pointcut="execution(* com.itwill.user.UserService.*(..))"/>
		</aop:aspect>
	</aop:config>
	<!-- 
		pointcut expression
		execution(* com.itwill.user.UserService.findUserList())
		execution(* com.itwill.user.UserService.find*(..))
		execution(* com.itwill.user.UserService.*(..))
		execution(* com.itwill.user.UserService.*(*,*))
		execution(* com.itwill.user.UserService.*(String,*))
		execution(* com.itwill.user.UserService.*(String,String))
		execution(* com.itwill.user.User*.*(..))
		execution(* com.itwill.user.*.*(..))
		execution(* com.itwill.*.*(..))
		execution(* *..UserDao.*(..))"/>
		
		within(some.package.SomeService)
			- SomeService 인터페이스 내 모든 메서드 호출
		within(some.package.*)
			- some.package 패키지 내 모든 메서드 호출
		within(some.package..*)
			- some.package 패키지 및 하위 패키지 내 모든 메서드 호출
		bean(someServiceBean)
			- 이름이 someServiceBean인 빈의 메서드 호출
		bean(*Service)
			- 이름이 Service로 끝나는 빈의 메서드 호출
		
	 -->
</beans>
